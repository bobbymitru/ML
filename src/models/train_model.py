import pandas as pdfrom pathlib import Pathimport osfrom sklearn.pipeline import Pipelinefrom sklearn.linear_model import LinearRegression, Lasso, Ridge, ElasticNetfrom sklearn.preprocessing import PolynomialFeatures, StandardScaler, MinMaxScaler# Setting hyperparameterspath_root_dir = Path(os.getcwd()).parent.parentpath_data = f'{path_root_dir}/data/processed'models_list = [    LinearRegression(),    Lasso(alpha=0.3, fit_intercept=True),    Ridge(alpha=10, fit_intercept=True),    # ElasticNet()]models_names = [    'polynomial_regression',    'lasso_regression',    'ridge_regression',    # 'elastic_net_regression']# grids_list = []# scores_list = []models_results = {}# Import src librariesfrom src.model import run_model# Read datadf = pd.read_csv(f'{path_data}/boston_housing_model.csv', index_col='ID')# for model, model_name, grid, scorer in zip(models_list, models_names, grids_list, scores_list):for model, model_name in zip(models_list, models_names):    pipline = Pipeline([        ('standard_scaler', StandardScaler()),        ('poly_features', PolynomialFeatures(degree=2)),        ('model', model)    ])    models_results[model_name] = run_model(        X=df.drop(columns=['medv']),        y=df['medv'],        pipeline=pipline,        # grid=grid,        # scorer=scorer,        rs=42    )    print(f'=== {model_name} ===')    print(f'Train score {models_results[model_name]["train_score"]}')    print(f'Test score {models_results[model_name]["test_score"]}')